!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.HexagonMap=e()}(this,function(){"use strict";const t={FLAT:{f0:1.5,f1:0,f2:.5*Math.sqrt(3),f3:Math.sqrt(3),b0:2/3,b1:0,b2:-1/3,b3:Math.sqrt(3)/3,size:{x:2,y:Math.sqrt(3)},rotation:0},POINTY:{f0:Math.sqrt(3),f1:.5*Math.sqrt(3),f2:0,f3:1.5,b0:Math.sqrt(3)/3,b1:-1/3,b2:0,b3:2/3,size:{x:Math.sqrt(3),y:2},rotation:30}},e={HEX:[{q:1,r:0},{q:1,r:-1},{q:0,r:-1},{q:-1,r:0},{q:-1,r:1},{q:0,r:1}],CUBIC:[{x:1,y:-1,z:0},{x:1,y:0,z:-1},{x:0,y:1,z:-1},{x:-1,y:1,z:0},{x:-1,y:0,z:1},{x:0,y:-1,z:1}]};function i(t,e,i){return t+(e-t)*i}function n(t,e,i){this.x=t,this.y=e,this.z=i}function Hexagon(t,e){this.q=t,this.r=e}function r(t){return new n(t.q,-t.q-t.r,t.r)}function s(t){return new Hexagon(t.x,t.z)}function HexagonMap(){this.origin={x:0,y:0},this.tileSize={x:0,y:0},this._size={x:0,y:0},this._layout=t.POINTY,this.data={},this.setTileSize(20,20)}return n.prototype={key:function(){return this.x+","+this.y+","+this.z},equals:function(t){return this.x===t.x&&this.y===t.y&&this.z===t.z},add:function(t){return new n(this.x+t.x,this.y+t.y,this.z+t.z)},substract:function(t){return new n(this.x-t.x,this.y-t.y,this.z-t.z)},scale:function(t){return new n(this.x*t,this.y*t,this.z*t)},round:function(){let t=Math.round(this.x),e=Math.round(this.y),i=Math.round(this.z),r=Math.abs(t-this.x),s=Math.abs(e-this.y),o=Math.abs(i-this.z);return r>s&&r>o?t=-e-i:s>o?e=-t-i:i=-t-e,new n(t,e,i)},distanceTo:function(t){return.5*(Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z))},lineTo:function(t){let e=this.distanceTo(t),r=[],s=null;for(let l=0;l<=e;l++)h=t,a=l/e,s={x:i((o=this).x,h.x,a),y:i(o.y,h.y,a),z:i(o.z,h.z,a)},r.push(new n(s.x,s.y,s.z).round());var o,h,a;return r},neighbors:function(){let t=[];for(let i=0;i<e.CUBIC.length;i++)t.push(this.add(e.CUBIC[i]));return t},neighborsInRange:function(t){let e=[],i=null;for(let r=-t;r<=t;r++)for(let s=Math.max(-t,-r-t);s<=Math.min(t,-r+t);s++)(i=new n(r,s,-r-s).add(this)).x==this.x&&i.y==this.y||e.push(i);return e},neighborsInRing:function(t){if(0==t)return new n(this.x,this.y,this.z);let i=[],r=this.add(new n(1,-1,0).scale(t));for(let n=0;n<6;n++)for(let s=0;s<t;s++)i.push(r),r=r.add(e.CUBIC[n]);return i},neighborsInReach:function(t){let e=new n(this.x,this.y,this.z),i={};i[e.key()]=!0;let r=new Array(t+1);r[0]=[e];let s=[],o=!1;for(let t=1;t<r.length;t++){r[t]=[];for(let e=0;e<r[t-1].length;e++){s=r[t-1][e].neighbors();for(let e=0;e<s.length;e++)(o=!1)||i.hasOwnProperty(s[e].key())||(i[s[e].key()]=!0,r[t].push(s[e]))}}return r}},Hexagon.prototype={key:function(){return this.q+","+this.r},equals:function(t){return this.q===t.q&&this.r===t.r},add:function(t){return new Hexagon(this.q+t.q,this.r+t.r)},substract:function(t){return new Hexagon(this.q-t.q,this.r-t.r)},scale:function(t){return new Hexagon(this.q*t,this.r*t)},round:function(){return s(r(this).round())},distanceTo:function(t){return r(this).distanceTo(r(t))},lineTo:function(t){let e=r(this).lineTo(r(t));for(let t=0;t<e.length;t++)e[t]=s(e[t]);return e},neighbors:function(){let t=[];for(let i=0;i<e.HEX.length;i++)t.push(this.add(e.HEX[i]));return t},neighborsInRange:function(t){let e=r(this).neighborsInRange(t);for(let t=0;t<e.length;t++)e[t]=s(e[t]);return e},neighborsInRing:function(t){let e=r(this).neighborsInRing(t);for(let t=0;t<e.length;t++)e[t]=s(e[t]);return e},neighborsInReach:function(t){let e=r(this).neighborsInReach(t);for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length;i++)e[t][i]=s(e[t][i]);return e}},HexagonMap.prototype={setOrigin:function(t,e){let i=parseFloat(t),n=parseFloat(e);isNaN(i)||isNaN(n)||(this.origin.x=i,this.origin.y=n)},setTileSize:function(t,e){let i=parseFloat(t),n=parseFloat(e);isNaN(i)||isNaN(n)||(this.tileSize.x=i,this.tileSize.y=n,this._size.x=i/this._layout.size.x,this._size.y=n/this._layout.size.y)},setLayout:function(e){"flat"===e?this._layout=t.FLAT:"pointy"===e&&(this._layout=t.POINTY)},create:function(t,e,i){switch(this.data={},t){case"parallelogram":this.data=function(t,e,i,n){let r={},s=null;for(let o=t;o<=e;o++)for(let t=i;t<=n;t++)s=new Hexagon(o,t),r[s.key()]=s;return r}(e[0],e[1],e[2],e[3]);break;case"diamond":this.data=function(t,e,i,n){let r={},s=null;for(let o=t;o<=e;o++)for(let t=i;t<=n;t++)s=new Hexagon(o,-o-t),r[s.key()]=s;return r}(e[0],e[1],e[2],e[3]);break;case"rectangle-odd":this.data=function(t,e){let i={},n=null,r=Math.floor(.5*t),s=Math.floor(.5*e),o=0;for(let h=-s;h<e-s;h++)for(let e=-r-(o=h>>1);e<t-r-o;e++)n=new Hexagon(e,h),i[n.key()]=n;return i}(e[0],e[1]);break;case"rectangle-even":this.data=function(t,e){let i={},n=null,r=Math.floor(.5*t),s=Math.floor(.5*e),o=0;for(let h=-s;h<e-s;h++)for(let e=-r-(o=h>>1);e<t-r-o;e++)n=new Hexagon(-e-h,h),i[n.key()]=n;return i}(e[0],e[1]);break;case"triangle-up":this.data=function(t){let e={},i=null;for(let n=0;n>=-t;n--)for(let r=-n;r<=t;r++)i=new Hexagon(r,n),e[i.key()]=i;return e}(e);break;case"triangle-down":this.data=function(t){let e={},i=null;for(let n=0;n<=t;n++)for(let r=0;r<=t-n;r++)i=new Hexagon(n,r),e[i.key()]=i;return e}(e);break;case"hexagon":this.data=function(t){let e={},i=null,n=0,r=0;for(let s=-t;s<=t;s++){n=Math.max(-t,-s-t),r=Math.min(t,-s+t);for(let t=n;t<=r;t++)i=new Hexagon(s,t),e[i.key()]=i}return e}(e)}"function"!=typeof i&&(i=function(t,e,i){return i}),this.fill(i)},fill:function(t){let e=Object.keys(this.data),i=null;for(let n=0;n<e.length;n++)i=e[n].split(","),this.data[e[n]]=t(i[0],i[1],this.data[e[n]])},forEach:function(t){let e=Object.keys(this.data),i=null;for(let n=0;n<e.length;n++)t((i=e[n].split(","))[0],i[1],this.data[e[n]])},coordToHex:function(t,e){let i=(t-this.origin.x)/this._size.x,n=(e-this.origin.y)/this._size.y;return new Hexagon(this._layout.b0*i+this._layout.b1*n,this._layout.b2*i+this._layout.b3*n)},hexToCoord:function(t){return{x:(this._layout.f0*t.q+this._layout.f1*t.r)*this._size.x,y:(this._layout.f2*t.q+this._layout.f3*t.r)*this._size.y}},getHexagon:function(t,e){let i=this.coordToHex(t,e).round().key();return i in this.data?this.data[i]:null},filterHexagonList:function(t){let e=[],i="";for(let n=0;n<t.length;n++)(i=t[n].key())in this.data&&e.push(this.data[i]);return e},getNeighbors(t,e){let i=this.coordToHex(t,e).round();return this.filterHexagonList(i.neighbors())},getHexagonBetween:function(t,e,i,n){let r=this.coordToHex(t,e).round(),s=this.coordToHex(i,n).round();return this.filterHexagonList(r.lineTo(s))},drawImages:function(t,e){let i=null;this.forEach(function(n,r,s){i=e(n,r,s),this.drawHexImage(t,{q:n,r:r},i)}.bind(this))},drawShapes:function(t,e){this.forEach(function(i,n,r){this.drawHexShape(t,r),e(i,n,r)}.bind(this))},drawHexImage:function(t,e,i){let n=this.hexToCoord(e),r=this.origin.x+n.x-.5*this.tileSize.x,s=this.origin.y+n.y-.5*this.tileSize.y,o=this.tileSize.x,h=this.tileSize.y;console.log(r,s,o,h),t.drawImage(i,r,s,o,h)},drawHexShape:function(t,e){let i=this.hexToCoord(e),n=[],r=0,s=0,o=0;for(let t=0;t<6;t++)r=(this._layout.rotation+60*t)*Math.PI/180,s=this.origin.x+i.x+this._size.x*Math.cos(r),o=this.origin.y+i.y+this._size.y*Math.sin(r),n.push({x:s,y:o});t.beginPath(),t.moveTo(n[0].x,n[0].y);for(let e=1;e<=6;e++)t.lineTo(n[e%6].x,n[e%6].y);t.closePath()}},HexagonMap});
